// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                        String  @id @default(cuid())
  email                     String  @unique
  name                      String
  currentHashedRefreshToken String?
}

enum Class {
  Warrior
  Paladin
  Hunter
  Rogue
  Priest
  Shaman
  Mage
  Warlock
  Monk
  Druid
  DemonHunter
  DeathKnight
  Evoker
}

enum Role {
  Tank
  Healer
  Damage
}

model Character {
  id                     String                   @id @default(cuid())
  name                   String
  class                  Class
  role                   Role
  RaidContribution       RaidContribution[]
  SuicideKingList        SuicideKingList[]
  SuicideKingListHistory SuicideKingListHistory[]
}

model RaidContribution {
  id          String    @id @default(cuid())
  character   Character @relation(fields: [characterId], references: [id])
  date        DateTime
  amount      Int
  characterId String
}

model SuicideKingList {
  characterId String    @id @default(cuid())
  character   Character @relation(fields: [characterId], references: [id])
  rank        Int?
  tSetRank    Int?
}

model SuicideKingListHistory {
  characterId String    @id @default(cuid())
  character   Character @relation(fields: [characterId], references: [id])
  rank        Int
  tSetRank    Int
  timestamp   DateTime
  item        String?
}
